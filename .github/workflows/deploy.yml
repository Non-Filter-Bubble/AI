name: Deploy FastAPI Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Delete untagged Docker images
        run: |
          images=$(docker images -f "dangling=true" -q)
          for image_id in $images; do
            docker rmi -f $image_id
          done          

      - name: Build and push Docker image for FastAPI
        run: |
          # Build Docker image
          docker build -t my-ai-app4 .
      
          # Tag Docker image
          docker tag my-ai-app4 ${{ secrets.DOCKER_USERNAME }}/my-ai-app4:latest
      
          # Login to Docker Hub
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
          # Push Docker image to Docker Hub
          docker push ${{ secrets.DOCKER_USERNAME }}/my-ai-app4:latest
        
      - name: AWS EC2에 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # sudo docker pull ${{ secrets.DOCKER_USERNAME }}/my-ai-app4:latest
            sudo docker stop my-ai-app4 || true
            sudo docker rm my-ai-app4 || true
            # sudo docker run -d -p 8000:8000 --name my-ai-app4 --restart always ${{ secrets.DOCKER_USERNAME }}/my-ai-app4:latest
            sudo docker run -d -p 8000:8000 --name my-ai-app4 ${{ secrets.DOCKER_USERNAME }}/my-ai-app4:latest
