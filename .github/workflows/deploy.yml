name: Deploy FastAPI Application with Nginx

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for FastAPI
        run: |
          docker build -f Dockerfile.fastapi -t ${{ secrets.DOCKER_USERNAME }}/fastapi_app .
          docker tag ${{ secrets.DOCKER_USERNAME }}/fastapi_app ${{ secrets.DOCKER_USERNAME }}/fastapi_app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi_app:latest

      - name: Build and push Docker image for Nginx
        run: |
          docker build -f Dockerfile.nginx -t ${{ secrets.DOCKER_USERNAME }}/nginx .
          docker tag ${{ secrets.DOCKER_USERNAME }}/nginx ${{ secrets.DOCKER_USERNAME }}/nginx:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx:latest

      - name: SSH and deploy to EC2
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Pulling Docker images..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi_app:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nginx:latest
    
            echo "Stopping and removing existing containers..."
            sudo docker stop fastapi_app || true
            sudo docker rm fastapi_app || true
            sudo docker stop nginx || true
            sudo docker rm nginx || true
    
            echo "Running new containers..."
            sudo docker run -d --name fastapi_app -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/fastapi_app:latest
            sudo docker run -d --name nginx -p 80:80 ${{ secrets.DOCKER_USERNAME }}/nginx:latest
  
